<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
    <script src="/socket.io/socket.io.js"></script>
    <style>
        .message-container {
            max-height: 400px;
            overflow-y: auto;
            border: 1px solid #ccc;
            margin-bottom: 20px;
            padding: 10px;
        }
        .message {
            margin-bottom: 10px;
        }
        .message.other {
            color: blue;
        }
        .message.self {
            color: green;
        }
        .user-list {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h2 class="text-center">Bienvenido, <span id="username"><%= username %></span></h2>

        <!-- Lista de usuarios conectados -->
        <div class="user-list">
            <h5>Usuarios conectados:</h5>
            <ul id="userList"></ul>
        </div>

        <!-- Contenedor de mensajes -->
        <div class="message-container" id="messages">
            <% messages.forEach(message => { %>
                <div class="message <%= message.username === username ? 'self' : 'other' %>">
                    <strong><%= message.username %>:</strong> <%= message.message %>
                </div>
            <% }) %>
        </div>

        <!-- Campo para escribir mensaje -->
        <div class="input-group mb-3">
            <input type="text" id="message" class="form-control" placeholder="Escribe un mensaje" aria-label="Mensaje">
            <button class="btn btn-primary" id="sendBtn">Enviar</button>
        </div>
    </div>

    <script>
        const socket = io();

        // Obtener el nombre de usuario desde la página
        const username = "<%= username %>";
        document.getElementById('username').textContent = username;

        // Actualizar la lista de usuarios conectados
        socket.on('updateUsers', (users) => {
            const userList = document.getElementById('userList');
            userList.innerHTML = ''; // Limpiar la lista
            users.forEach(user => {
                const li = document.createElement('li');
                li.textContent = user;
                userList.appendChild(li);
            });
        });

        // Enviar mensaje
        document.getElementById('sendBtn').addEventListener('click', () => {
            const message = document.getElementById('message').value;
            if (message) {
                socket.emit('sendMessage', { message: message, username: username });
                document.getElementById('message').value = ''; // Limpiar el campo de texto
            }
        });

        // Escuchar los mensajes entrantes
        socket.on('receiveMessage', (data) => {
            const messageContainer = document.getElementById('messages');
            const messageElement = document.createElement('div');
            messageElement.classList.add('message');
            messageElement.textContent = `${data.username}: ${data.message}`;
            messageContainer.appendChild(messageElement);
            messageContainer.scrollTop = messageContainer.scrollHeight; // Hacer scroll al último mensaje
        });
    </script>
</body>
</html>
